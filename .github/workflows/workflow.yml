# This workflow shows how to build a Docker image, tag it, and push it to DigitalOcean Container Registry, and
# deploy the application on a DigitalOcean Kubernetes cluster. For a description of the entire workflow, 
# see www.digitalocean.com/docs/kubernetes/how-to/deploy-using-github-actions.

name: Build, push, and deploy prod

# Controls when the action will run.
on:
  # Triggers the workflow on push request on the main branch for changes in the specified paths.
  
  release:
    types:
      - created
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
    - name: Checkout code
      uses: actions/checkout@v2

    # Install doctl.
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Build container image for main Server
      run: docker build -f docker/gigabot/Dockerfile -t ${{ secrets.REGISTRY_NAME }}/gigabot-srv:${{ github.ref_name }} .
      
    - name: Push latest image to DigitalOcean Container Registry
      run: docker push ${{ secrets.REGISTRY_NAME }}/gigabot-srv:${{ github.ref_name }}
    
    - name: Build container image for task handler
      run: docker build -f docker/gigabot-task/Dockerfile -t ${{ secrets.REGISTRY_NAME }}/gigabot-task:${{ github.ref_name }} .
      
    - name: Push latest image to DigitalOcean Container Registry
      run: docker push ${{ secrets.REGISTRY_NAME }}/gigabot-task:${{ github.ref_name }}
